name: Nightly Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Run Nightly Build in PST
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Set up Docker Compose
        run: sudo apt-get install docker-compose

      - name: Run Docker on Ubuntu
        run: docker-compose up -d --build

      - name: Run Tests in the Container
        run: docker-compose exec -T web pytest
#      - name: Set up Python
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.10"
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#          python -m pip install pytest
#
#      - name: Run Tests
#        run: pytest

#      - name: Build Docker Image
#        if: success()
#        run: docker build -t your-docker-username/fastapi-beyond-crud:latest .
#
#      - name: Login to Docker Hub
#        if: success()
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      - name: Push to Docker Hub
#        if: success()
#        run: docker push your-docker-username/fastapi-beyond-crud:latest

#      - name: Send Email on Failure
#        if: failure()
#        run: |
#          curl --request POST \
#          --url https://api.sendgrid.com/v3/mail/send \
#          --header "Authorization: Bearer ${{ secrets.SENDGRID_API_KEY }}" \
#          --header "Content-Type: application/json" \
#          --data '{
#            "personalizations": [{"to": [{"email": "your-email@example.com"}]}],
#            "from": {"email": "no-reply@yourdomain.com"},
#            "subject": "Nightly Build Failed",
#            "content": [{"type": "text/plain", "value": "The nightly build has failed. Please check logs."}]
#          }'
