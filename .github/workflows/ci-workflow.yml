name: Nightly Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: adminpassword
          POSTGRES_DB: bookly
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6.2
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "sqlmodel[asyncio]"
          pip install -r requirements.txt
      - name: Run Migrations
        run: |
          # Wait for PostgreSQL to be ready
          until pg_isready -h localhost -p 5432 -U admin; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          alembic upgrade head
      - name: Run Tests
        env:
          DATABASE_URL: postgresql+asyncpg://admin:adminpassword@localhost:5432/bookly
          REDIS_URL: redis://localhost:6379/0
          JWT_SECRET: abaa85dd8ea987c296d82237eb7d2127cf386501765de8df54c2d00bf050d08550da3e6757316a3e881ec90cb9abf54a786952bcaff4bab99d470b332da18122bd16cbfd886edb0d6f09a316d66c83c93a1cbc95e04e1f390dd48f3932b48e4283fa8fd9c44e3d24c02e021763fa3c4fa7a71a00045e0c41f4d03318c0d85e6ea74cc5c35001d421e534588b41dab2c5476ef41d688358918c30a42d563f5117f6062474818d8888109a6607fd4cd59ac418a36b4a13456e0a5c64fccced2c5edfff87edba15bad869b89b7e1c743ca41ffb7916fb1f98e88637fe57dca0b182cbafff6cafb87b9a26b28a5aca8a10d4a0eb6d74f38224e7f88b33d64121820a
          JWT_ALGORITHM: HS256
        run: |
          pytest -v
  build-and-push:
    runs-on: ubuntu-latest
    needs: test-and-build  # Ensures tests pass before building Docker image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookly:latest .
      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/bookly:latest

  notify-on-failure:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: failure()  # Only run if tests fail

    steps:
      - name: Send Failure Email via Ethereal SMTP
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          from: ${{ secrets.MAIL_FROM }}
          to: "zmehta2@dons.usfca.edu"
          subject: "Nightly Build Failed"
          body: "The nightly build has failed. Please check logs."
          content_type: text/plain